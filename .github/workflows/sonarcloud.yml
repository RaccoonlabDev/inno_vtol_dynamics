name: SonarCloud

on: [push]

env:
  ROS_DISTRO: noetic

defaults:
  run:
    shell: bash
jobs:
  tests:
    runs-on: ubuntu-20.04
    timeout-minutes: 8
    container:
      image: ros:noetic
    steps:
      - run: apt-get update && apt-get install -y git
      - run: if [[ "$ROS_DISTRO" = "melodic" ]] ; then apt-get install -y python-catkin-tools python-pip python3-pip python-rosdep python-rosinstall python-rosinstall-generator python-wstool build-essential python-catkin-tools ; fi
      - run: if [[ "$ROS_DISTRO" = "noetic" ]] ;  then apt-get install -y python3-pip ros-noetic-catkin python3-catkin-tools ; fi

      - uses: actions/checkout@v2
        with:
          path: catkin_ws/src/uav_hitl_dynamics

      - name: Install requirements
        run: ./catkin_ws/src/uav_hitl_dynamics/install_requirements.sh

      - name: Install dependencies
        run: |
          git clone https://github.com/RaccoonlabDev/geographiclib_conversions.git catkin_ws/src/geographiclib_conversions
          ./catkin_ws/src/geographiclib_conversions/scripts/install.sh

      - run: apt install -y curl unzip
      - name: Install sonar-scanner and build-wrapper
        uses: SonarSource/sonarcloud-github-c-cpp@v1

      - name: Run build-wrapper
        run: |
          source /opt/ros/$ROS_DISTRO/setup.bash
          cd catkin_ws
          build-wrapper-linux-x86-64 --out-dir src/uav_hitl_dynamics/bw-output catkin build

      - name: Run sonar-scanner
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd catkin_ws/src/uav_hitl_dynamics
          sonar-scanner
